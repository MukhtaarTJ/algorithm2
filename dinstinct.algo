Question1

Algorithm FindDistinctSum(set1, set2)
    distinctElements := new Set()

    sum := 0

    For each num in set1
        distinctElements.add(num)
        
        sum := sum + num
    End For

    For each num in set2
        distinctElements.add(num)
        
        sum := sum + num
    End For

    Display "Distinct Elements:", distinctElements
    
    Display "Output:", sum
End Algorithm

// Given sets
set1 := [4, 3, 9, 7, 5, 1]
set2 := [6, 3, 8, 5, 2, 4]

// Calculate and display the result using the FindDistinctSum algorithm
FindDistinctSum(set1, set2)
Output 45 distinctElements( 1, 2, 3, 4, 5, 6, 7, 8, 9.)








Question2:
Algorithm dot_product(v1, v2, n)
    // Calculate the dot product of vectors v1 and v2
    ps := 0
    For i := 0 to n-1
        ps := ps + (v1[i] * v2[i])
    End For
    Return ps
End Algorithm

Algorithm AreVectorsOrthogonal(v1, v2, n)
    // Calculate the dot product of vectors v1 and v2
    dp := dot_product(v1, v2, n)

    // Check if the dot product is zero (orthogonal)
    If dp = 0
        Return "Orthogonal"
    Else
        Return "Not Orthogonal"
    End If
End Algorithm

// Given input: n pairs of vectors v1 and v2
n := input("Enter the number of vector pairs: ")
For i := 0 to n-1
    Display "For Vector Pair", i+1
    // Read the elements of vector v1
    Display "Enter elements of vector v1:"
    For j := 0 to 2
        Read v1[j]
    End For
    
    // Read the elements of vector v2
    Display "Enter elements of vector v2:"
    For j := 0 to 2
        Read v2[j]
    End For
    
    // Calculate and display if vectors are orthogonal
    result := AreVectorsOrthogonal(v1, v2, 3)
    Display "Result:", result
End For



